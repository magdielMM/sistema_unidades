// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sistema_unidades.Models;

#nullable disable

namespace sistema_unidades.Migrations
{
    [DbContext(typeof(ClienteBdContext))]
    [Migration("20231012215227_ChangeIntToString")]
    partial class ChangeIntToString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("sistema_unidades.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<long?>("Telefono")
                        .HasColumnType("bigint")
                        .HasColumnName("telefono");

                    b.HasKey("Id");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("sistema_unidades.Models.Periodo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mes");

                    b.HasKey("Id");

                    b.ToTable("periodo", (string)null);
                });

            modelBuilder.Entity("sistema_unidades.Models.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("tipo", (string)null);
                });

            modelBuilder.Entity("sistema_unidades.Models.Unidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<long>("Folio")
                        .HasColumnType("bigint")
                        .HasColumnName("folio");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<int>("IdPeriodo")
                        .HasColumnType("int")
                        .HasColumnName("id_periodo");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo");

                    b.Property<int>("NSerie")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("n_serie")
                        .IsFixedLength();

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("placa");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK_registro");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdPeriodo");

                    b.HasIndex("IdTipo");

                    b.ToTable("unidad", (string)null);
                });

            modelBuilder.Entity("sistema_unidades.Models.Unidad", b =>
                {
                    b.HasOne("sistema_unidades.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Unidads")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_registro_cliente");

                    b.HasOne("sistema_unidades.Models.Periodo", "IdPeriodoNavigation")
                        .WithMany("Unidads")
                        .HasForeignKey("IdPeriodo")
                        .IsRequired()
                        .HasConstraintName("FK_unidad_periodo");

                    b.HasOne("sistema_unidades.Models.Tipo", "IdTipoNavigation")
                        .WithMany("Unidads")
                        .HasForeignKey("IdTipo")
                        .IsRequired()
                        .HasConstraintName("FK_unidad_tipo");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdPeriodoNavigation");

                    b.Navigation("IdTipoNavigation");
                });

            modelBuilder.Entity("sistema_unidades.Models.Cliente", b =>
                {
                    b.Navigation("Unidads");
                });

            modelBuilder.Entity("sistema_unidades.Models.Periodo", b =>
                {
                    b.Navigation("Unidads");
                });

            modelBuilder.Entity("sistema_unidades.Models.Tipo", b =>
                {
                    b.Navigation("Unidads");
                });
#pragma warning restore 612, 618
        }
    }
}
